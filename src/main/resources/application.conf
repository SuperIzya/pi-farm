akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  jvm-exit-on-fatal-error = off

  actor {
    default-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 2
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 2.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 10
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 1
    }
  }
}

farm {
  driver-registry {
    devices {
      patterns = [
        "ttyUSB",
        "ttyACM"
      ]

    }
  }

  db {
    profile = "slick.jdbc.H2Profile$"
    keepAliveConnection = true
    properties {
      url = "jdbc:h2:./data/farm;ACCESS_MODE_DATA=rws"
      driver = "org.h2.Driver"
      user = "pi"
      password = "farm"
    }
  }

}